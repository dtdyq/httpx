package org.dyq.httpx.util;

import java.nio.charset.StandardCharsets;
import java.util.HashMap;
import java.util.Map;

public class HeaderValues {
    public static final String APPLICATION_JSON = "application/json";
    public static final String APPLICATION_X_WWW_FORM_URLENCODED = "application/x-www-form-urlencoded";
    public static final String APPLICATION_OCTET_STREAM = "application/octet-stream";
    public static final String APPLICATION_XHTML = "application/xhtml+xml";
    public static final String APPLICATION_XML = "application/xml";
    public static final String APPLICATION_ZSTD = "application/zstd";
    public static final String ATTACHMENT = "attachment";
    public static final String BASE64 = "base64";
    public static final String BINARY = "binary";
    public static final String BOUNDARY = "boundary";
    public static final String BYTES = "bytes";
    public static final String CHARSET = "charset";
    public static final String CHUNKED = "chunked";
    public static final String CLOSE = "close";
    public static final String COMPRESS = "compress";
    public static final String CONTINUE = "100-continue";
    public static final String DEFLATE = "deflate";
    public static final String X_DEFLATE = "x-deflate";
    public static final String FILE = "file";
    public static final String FILENAME = "filename";
    public static final String FORM_DATA = "form-data";
    public static final String GZIP = "gzip";
    public static final String BR = "br";
    public static final String SNAPPY = "snappy";
    public static final String ZSTD = "zstd";
    public static final String GZIP_DEFLATE = "gzip,deflate";
    public static final String X_GZIP = "x-gzip";
    public static final String IDENTITY = "identity";
    public static final String KEEP_ALIVE = "keep-alive";
    public static final String MAX_AGE = "max-age";
    public static final String MAX_STALE = "max-stale";
    public static final String MIN_FRESH = "min-fresh";
    public static final String MULTIPART_FORM_DATA = "multipart/form-data";
    public static final String MULTIPART_MIXED = "multipart/mixed";
    public static final String MUST_REVALIDATE = "must-revalidate";
    public static final String NAME = "name";
    public static final String NO_CACHE = "no-cache";
    public static final String NO_STORE = "no-store";
    public static final String NO_TRANSFORM = "no-transform";
    public static final String NONE = "none";
    public static final String ZERO = "0";
    public static final String ONLY_IF_CACHED = "only-if-cached";
    public static final String PRIVATE = "private";
    public static final String PROXY_REVALIDATE = "proxy-revalidate";
    public static final String PUBLIC = "public";
    public static final String QUOTED_PRINTABLE = "quoted-printable";
    public static final String S_MAXAGE = "s-maxage";
    public static final String TEXT_CSS = "text/css";
    public static final String TEXT_HTML = "text/html";
    public static final String TEXT_EVENT_STREAM = "text/event-stream";
    public static final String TEXT_PLAIN = "text/plain";
    public static final String TRAILERS = "trailers";
    public static final String UPGRADE = "upgrade";
    public static final String WEBSOCKET = "websocket";
    public static final String XML_HTTP_REQUEST = "XMLHttpRequest";
    public static final byte[] APPLICATION_JSON_BYTES = APPLICATION_JSON.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] APPLICATION_X_WWW_FORM_URLENCODED_BYTES = APPLICATION_X_WWW_FORM_URLENCODED.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] APPLICATION_OCTET_STREAM_BYTES = APPLICATION_OCTET_STREAM.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] APPLICATION_XHTML_BYTES = APPLICATION_XHTML.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] APPLICATION_XML_BYTES = APPLICATION_XML.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] APPLICATION_ZSTD_BYTES = APPLICATION_ZSTD.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] ATTACHMENT_BYTES = ATTACHMENT.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] BASE64_BYTES = BASE64.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] BINARY_BYTES = BINARY.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] BOUNDARY_BYTES = BOUNDARY.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] BYTES_BYTES = BYTES.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] CHARSET_BYTES = CHARSET.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] CHUNKED_BYTES = CHUNKED.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] CLOSE_BYTES = CLOSE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] COMPRESS_BYTES = COMPRESS.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] CONTINUE_BYTES = CONTINUE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] DEFLATE_BYTES = DEFLATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] X_DEFLATE_BYTES = X_DEFLATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] FILE_BYTES = FILE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] FILENAME_BYTES = FILENAME.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] FORM_DATA_BYTES = FORM_DATA.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] GZIP_BYTES = GZIP.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] BR_BYTES = BR.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] SNAPPY_BYTES = SNAPPY.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] ZSTD_BYTES = ZSTD.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] GZIP_DEFLATE_BYTES = GZIP_DEFLATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] X_GZIP_BYTES = X_GZIP.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] IDENTITY_BYTES = IDENTITY.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] KEEP_ALIVE_BYTES = KEEP_ALIVE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MAX_AGE_BYTES = MAX_AGE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MAX_STALE_BYTES = MAX_STALE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MIN_FRESH_BYTES = MIN_FRESH.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MULTIPART_FORM_DATA_BYTES = MULTIPART_FORM_DATA.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MULTIPART_MIXED_BYTES = MULTIPART_MIXED.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] MUST_REVALIDATE_BYTES = MUST_REVALIDATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] NAME_BYTES = NAME.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] NO_CACHE_BYTES = NO_CACHE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] NO_STORE_BYTES = NO_STORE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] NO_TRANSFORM_BYTES = NO_TRANSFORM.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] NONE_BYTES = NONE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] ZERO_BYTES = ZERO.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] ONLY_IF_CACHED_BYTES = ONLY_IF_CACHED.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] PRIVATE_BYTES = PRIVATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] PROXY_REVALIDATE_BYTES = PROXY_REVALIDATE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] PUBLIC_BYTES = PUBLIC.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] QUOTED_PRINTABLE_BYTES = QUOTED_PRINTABLE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] S_MAXAGE_BYTES = S_MAXAGE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] TEXT_CSS_BYTES = TEXT_CSS.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] TEXT_HTML_BYTES = TEXT_HTML.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] TEXT_EVENT_STREAM_BYTES = TEXT_EVENT_STREAM.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] TEXT_PLAIN_BYTES = TEXT_PLAIN.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] TRAILERS_BYTES = TRAILERS.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] UPGRADE_BYTES = UPGRADE.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] WEBSOCKET_BYTES = WEBSOCKET.getBytes(StandardCharsets.ISO_8859_1);
    public static final byte[] XML_HTTP_REQUEST_BYTES = XML_HTTP_REQUEST.getBytes(StandardCharsets.ISO_8859_1);

    private static final Map<String, byte[]> SB_MAP = new HashMap<>();

    static {
        SB_MAP.put(APPLICATION_JSON, APPLICATION_JSON_BYTES);
        SB_MAP.put(APPLICATION_X_WWW_FORM_URLENCODED, APPLICATION_X_WWW_FORM_URLENCODED_BYTES);
        SB_MAP.put(APPLICATION_OCTET_STREAM, APPLICATION_OCTET_STREAM_BYTES);
        SB_MAP.put(APPLICATION_XHTML, APPLICATION_XHTML_BYTES);
        SB_MAP.put(APPLICATION_XML, APPLICATION_XML_BYTES);
        SB_MAP.put(APPLICATION_ZSTD, APPLICATION_ZSTD_BYTES);
        SB_MAP.put(ATTACHMENT, ATTACHMENT_BYTES);
        SB_MAP.put(BASE64, BASE64_BYTES);
        SB_MAP.put(BINARY, BINARY_BYTES);
        SB_MAP.put(BOUNDARY, BOUNDARY_BYTES);
        SB_MAP.put(BYTES, BYTES_BYTES);
        SB_MAP.put(CHARSET, CHARSET_BYTES);
        SB_MAP.put(CHUNKED, CHUNKED_BYTES);
        SB_MAP.put(CLOSE, CLOSE_BYTES);
        SB_MAP.put(COMPRESS, COMPRESS_BYTES);
        SB_MAP.put(CONTINUE, CONTINUE_BYTES);
        SB_MAP.put(DEFLATE, DEFLATE_BYTES);
        SB_MAP.put(X_DEFLATE, X_DEFLATE_BYTES);
        SB_MAP.put(FILE, FILE_BYTES);
        SB_MAP.put(FILENAME, FILENAME_BYTES);
        SB_MAP.put(FORM_DATA, FORM_DATA_BYTES);
        SB_MAP.put(GZIP, GZIP_BYTES);
        SB_MAP.put(BR, BR_BYTES);
        SB_MAP.put(SNAPPY, SNAPPY_BYTES);
        SB_MAP.put(ZSTD, ZSTD_BYTES);
        SB_MAP.put(GZIP_DEFLATE, GZIP_DEFLATE_BYTES);
        SB_MAP.put(X_GZIP, X_GZIP_BYTES);
        SB_MAP.put(IDENTITY, IDENTITY_BYTES);
        SB_MAP.put(KEEP_ALIVE, KEEP_ALIVE_BYTES);
        SB_MAP.put(MAX_AGE, MAX_AGE_BYTES);
        SB_MAP.put(MAX_STALE, MAX_STALE_BYTES);
        SB_MAP.put(MIN_FRESH, MIN_FRESH_BYTES);
        SB_MAP.put(MULTIPART_FORM_DATA, MULTIPART_FORM_DATA_BYTES);
        SB_MAP.put(MULTIPART_MIXED, MULTIPART_MIXED_BYTES);
        SB_MAP.put(MUST_REVALIDATE, MUST_REVALIDATE_BYTES);
        SB_MAP.put(NAME, NAME_BYTES);
        SB_MAP.put(NO_CACHE, NO_CACHE_BYTES);
        SB_MAP.put(NO_STORE, NO_STORE_BYTES);
        SB_MAP.put(NO_TRANSFORM, NO_TRANSFORM_BYTES);
        SB_MAP.put(NONE, NONE_BYTES);
        SB_MAP.put(ZERO, ZERO_BYTES);
        SB_MAP.put(ONLY_IF_CACHED, ONLY_IF_CACHED_BYTES);
        SB_MAP.put(PRIVATE, PRIVATE_BYTES);
        SB_MAP.put(PROXY_REVALIDATE, PROXY_REVALIDATE_BYTES);
        SB_MAP.put(PUBLIC, PUBLIC_BYTES);
        SB_MAP.put(QUOTED_PRINTABLE, QUOTED_PRINTABLE_BYTES);
        SB_MAP.put(S_MAXAGE, S_MAXAGE_BYTES);
        SB_MAP.put(TEXT_CSS, TEXT_CSS_BYTES);
        SB_MAP.put(TEXT_HTML, TEXT_HTML_BYTES);
        SB_MAP.put(TEXT_EVENT_STREAM, TEXT_EVENT_STREAM_BYTES);
        SB_MAP.put(TEXT_PLAIN, TEXT_PLAIN_BYTES);
        SB_MAP.put(TRAILERS, TRAILERS_BYTES);
        SB_MAP.put(UPGRADE, UPGRADE_BYTES);
        SB_MAP.put(WEBSOCKET, WEBSOCKET_BYTES);
        SB_MAP.put(XML_HTTP_REQUEST, XML_HTTP_REQUEST_BYTES);
    }

    public static byte[] bytesOf(String key, byte[] def) {
        return SB_MAP.getOrDefault(key, def);
    }
}
